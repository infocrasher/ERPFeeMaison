#!/bin/bash

# Script de validation PostgreSQL pour ERP F√©e Maison
# VPS Ubuntu 24.10 - IP: 51.254.36.25

echo "üß™ Validation de la configuration PostgreSQL"
echo "============================================"

# Variables de configuration
DB_NAME="fee_maison_db"
DB_USER="fee_maison_user"
DB_PASSWORD="FeeMaison_ERP_2025_Secure!"

echo "üìã Configuration √† valider :"
echo "   Base de donn√©es : $DB_NAME"
echo "   Utilisateur     : $DB_USER"
echo "   Host            : localhost"
echo "   Port            : 5432"
echo ""

# 1. V√©rifier que PostgreSQL est en cours d'ex√©cution
echo "üîç √âtape 1 : V√©rification du service PostgreSQL..."
if systemctl is-active --quiet postgresql; then
    echo "‚úÖ PostgreSQL est en cours d'ex√©cution"
else
    echo "‚ùå PostgreSQL n'est pas en cours d'ex√©cution"
    echo "   D√©marrage du service..."
    sudo systemctl start postgresql
    sudo systemctl enable postgresql
fi

# 2. V√©rifier que PostgreSQL √©coute sur le bon port
echo ""
echo "üîç √âtape 2 : V√©rification du port d'√©coute..."
if netstat -tlnp | grep :5432 > /dev/null; then
    echo "‚úÖ PostgreSQL √©coute sur le port 5432"
    netstat -tlnp | grep :5432
else
    echo "‚ùå PostgreSQL n'√©coute pas sur le port 5432"
fi

# 3. Test de connexion avec l'utilisateur ERP
echo ""
echo "üîç √âtape 3 : Test de connexion avec l'utilisateur ERP..."
PGPASSWORD="$DB_PASSWORD" psql -h localhost -U $DB_USER -d $DB_NAME -c "SELECT version();" 2>/dev/null

if [ $? -eq 0 ]; then
    echo "‚úÖ Connexion r√©ussie avec l'utilisateur ERP"
else
    echo "‚ùå √âchec de la connexion avec l'utilisateur ERP"
    echo "   V√©rification des privil√®ges..."
fi

# 4. V√©rifier les privil√®ges utilisateur
echo ""
echo "üîç √âtape 4 : V√©rification des privil√®ges utilisateur..."
sudo -u postgres psql -c "\du $DB_USER" 2>/dev/null

# 5. V√©rifier l'existence de la base de donn√©es
echo ""
echo "üîç √âtape 5 : V√©rification de l'existence de la base..."
sudo -u postgres psql -c "\l" | grep $DB_NAME > /dev/null

if [ $? -eq 0 ]; then
    echo "‚úÖ Base de donn√©es $DB_NAME existe"
else
    echo "‚ùå Base de donn√©es $DB_NAME n'existe pas"
fi

# 6. Test de cr√©ation de table (test des privil√®ges)
echo ""
echo "üîç √âtape 6 : Test de cr√©ation de table..."
PGPASSWORD="$DB_PASSWORD" psql -h localhost -U $DB_USER -d $DB_NAME -c "
CREATE TABLE IF NOT EXISTS test_connection (
    id SERIAL PRIMARY KEY,
    test_field VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);" 2>/dev/null

if [ $? -eq 0 ]; then
    echo "‚úÖ Test de cr√©ation de table r√©ussi"
    
    # Nettoyer la table de test
    PGPASSWORD="$DB_PASSWORD" psql -h localhost -U $DB_USER -d $DB_NAME -c "DROP TABLE test_connection;" 2>/dev/null
    echo "‚úÖ Table de test supprim√©e"
else
    echo "‚ùå √âchec du test de cr√©ation de table"
fi

# 7. V√©rifier les extensions
echo ""
echo "üîç √âtape 7 : V√©rification des extensions..."
PGPASSWORD="$DB_PASSWORD" psql -h localhost -U $DB_USER -d $DB_NAME -c "
SELECT extname, extversion 
FROM pg_extension 
WHERE extname IN ('uuid-ossp', 'pg_trgm');" 2>/dev/null

# 8. Test de performance basique
echo ""
echo "üîç √âtape 8 : Test de performance basique..."
PGPASSWORD="$DB_PASSWORD" psql -h localhost -U $DB_USER -d $DB_NAME -c "
SELECT 
    version() as postgres_version,
    current_database() as current_db,
    current_user as current_user,
    pg_size_pretty(pg_database_size(current_database())) as db_size;" 2>/dev/null

# 9. V√©rification de la configuration
echo ""
echo "üîç √âtape 9 : V√©rification de la configuration..."
sudo -u postgres psql -c "SHOW max_connections;" 2>/dev/null
sudo -u postgres psql -c "SHOW shared_buffers;" 2>/dev/null
sudo -u postgres psql -c "SHOW effective_cache_size;" 2>/dev/null

echo ""
echo "üéØ R√©sum√© de la validation :"
echo "============================"
echo ""

# R√©sum√© final
if systemctl is-active --quiet postgresql && \
   netstat -tlnp | grep :5432 > /dev/null && \
   PGPASSWORD="$DB_PASSWORD" psql -h localhost -U $DB_USER -d $DB_NAME -c "SELECT 1;" > /dev/null 2>&1; then
    
    echo "‚úÖ CONFIGURATION POSTGRESQL VALID√âE"
    echo "   ‚úÖ Service en cours d'ex√©cution"
    echo "   ‚úÖ Port d'√©coute correct"
    echo "   ‚úÖ Connexion utilisateur ERP"
    echo "   ‚úÖ Privil√®ges configur√©s"
    echo "   ‚úÖ Base de donn√©es accessible"
    echo ""
    echo "üöÄ PostgreSQL est pr√™t pour l'ERP F√©e Maison !"
    echo ""
    echo "üìã Informations de connexion :"
    echo "   URL: postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME"
    echo "   Host: localhost"
    echo "   Port: 5432"
    echo "   Database: $DB_NAME"
    echo "   User: $DB_USER"
    
else
    echo "‚ùå CONFIGURATION POSTGRESQL INCOMPL√àTE"
    echo "   Veuillez v√©rifier les erreurs ci-dessus"
    echo "   et relancer le script de configuration"
fi

echo ""
echo "üìö Commandes utiles :"
echo "   Connexion admin: sudo -u postgres psql"
echo "   Connexion ERP: PGPASSWORD='$DB_PASSWORD' psql -h localhost -U $DB_USER -d $DB_NAME"
echo "   Status service: sudo systemctl status postgresql"
echo "   Logs: sudo tail -f /var/log/postgresql/postgresql-*.log" 