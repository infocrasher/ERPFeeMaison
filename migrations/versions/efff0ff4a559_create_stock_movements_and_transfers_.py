"""Create stock movements and transfers tables

Revision ID: efff0ff4a559
Revises: 08ee5551824b
Create Date: 2025-06-16 02:42:25.763068

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'efff0ff4a559'
down_revision = '08ee5551824b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stock_transfers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(length=50), nullable=False),
    sa.Column('source_location', sa.Enum('COMPTOIR', 'INGREDIENTS_LOCAL', 'INGREDIENTS_MAGASIN', 'CONSOMMABLES', name='stocklocationtype'), nullable=False),
    sa.Column('destination_location', sa.Enum('COMPTOIR', 'INGREDIENTS_LOCAL', 'INGREDIENTS_MAGASIN', 'CONSOMMABLES', name='stocklocationtype'), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'REQUESTED', 'APPROVED', 'IN_TRANSIT', 'COMPLETED', 'CANCELLED', name='transferstatus'), nullable=False),
    sa.Column('requested_by_id', sa.Integer(), nullable=False),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('completed_by_id', sa.Integer(), nullable=True),
    sa.Column('requested_date', sa.DateTime(), nullable=False),
    sa.Column('approved_date', sa.DateTime(), nullable=True),
    sa.Column('scheduled_date', sa.DateTime(), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['completed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requested_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference')
    )
    op.create_table('stock_movements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(length=50), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('stock_location', sa.Enum('COMPTOIR', 'INGREDIENTS_LOCAL', 'INGREDIENTS_MAGASIN', 'CONSOMMABLES', name='stocklocationtype'), nullable=False),
    sa.Column('movement_type', sa.Enum('ENTREE', 'SORTIE', 'TRANSFERT_SORTIE', 'TRANSFERT_ENTREE', 'AJUSTEMENT_POSITIF', 'AJUSTEMENT_NEGATIF', 'PRODUCTION', 'VENTE', 'INVENTAIRE', name='stockmovementtype'), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('total_value', sa.Float(), nullable=True),
    sa.Column('stock_before', sa.Float(), nullable=True),
    sa.Column('stock_after', sa.Float(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('transfer_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['transfer_id'], ['stock_transfers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference')
    )
    op.create_table('stock_transfer_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transfer_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity_requested', sa.Float(), nullable=False),
    sa.Column('quantity_approved', sa.Float(), nullable=True),
    sa.Column('quantity_transferred', sa.Float(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('notes', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['transfer_id'], ['stock_transfers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stock_transfer_lines')
    op.drop_table('stock_movements')
    op.drop_table('stock_transfers')
    # ### end Alembic commands ###
