"""Extension module RH - pointage et paie

Revision ID: 315e9632a74e
Revises: 3045a6af1ce5
Create Date: 2025-07-04 05:06:18.022634

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '315e9632a74e'
down_revision = '3045a6af1ce5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attendance_exceptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('raw_data', sa.Text(), nullable=True),
    sa.Column('error_reason', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_by', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payroll_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('closed_by', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendance_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('zk_uid', sa.Integer(), nullable=True),
    sa.Column('zk_user_id', sa.String(length=20), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('punch', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendance_summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('work_date', sa.Date(), nullable=False),
    sa.Column('scheduled_start', sa.Time(), nullable=True),
    sa.Column('scheduled_end', sa.Time(), nullable=True),
    sa.Column('actual_start', sa.Time(), nullable=True),
    sa.Column('actual_end', sa.Time(), nullable=True),
    sa.Column('scheduled_hours', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('worked_hours', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('overtime_hours', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('late_minutes', sa.Integer(), nullable=True),
    sa.Column('is_present', sa.Boolean(), nullable=True),
    sa.Column('is_late', sa.Boolean(), nullable=True),
    sa.Column('is_absent', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_id', 'work_date', name='unique_employee_date')
    )
    op.create_table('payroll_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('regular_hours', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('overtime_hours', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('base_salary', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('overtime_pay', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('prime', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('insurance_deduction', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('late_penalty', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('other_deductions', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('gross_salary', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_deductions', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('net_salary', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['payroll_periods.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_id', 'period_id', name='unique_employee_period')
    )
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.add_column(sa.Column('zk_user_id', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('work_schedule', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('is_insured', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('insurance_amount', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.create_unique_constraint(None, ['zk_user_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('hourly_rate')
        batch_op.drop_column('insurance_amount')
        batch_op.drop_column('is_insured')
        batch_op.drop_column('work_schedule')
        batch_op.drop_column('zk_user_id')

    op.drop_table('payroll_entries')
    op.drop_table('attendance_summaries')
    op.drop_table('attendance_records')
    op.drop_table('payroll_periods')
    op.drop_table('attendance_exceptions')
    # ### end Alembic commands ###
